1.时间：O（N）；空间：O（1）
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        /*这里不要写成nums.size() == 0，效率比较低*/
        if(nums.size() <= 2) return nums.size();
        int index = 0;
        bool isRepeated = false;
        for(int i = 1; i < nums.size(); ++i){
            if(nums[index] == nums[i]){
                if(isRepeated == false){
	  /* 下一句如果改成++index，会产生BUG，例如[1,1,1,1,3,3] */
                    nums[++index] = nums[i];
                    isRepeated = true;
                }
            }else{
                nums[++index] = nums[i];
                isRepeated = false;
            }
        }
        nums.resize(index + 1);
        return nums.size();
    }
};
2.时间：O（N）；空间：O（1）->（扩展性更好）
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if(nums.size() <= 2) return nums.size();
        int index = 2;
        for(int i = 2; i < nums.size(); ++i){
            if(nums[i] != nums[index - 2]){
                nums[index++] = nums[i];
            }
        }
        nums.resize(index);
        return nums.size();
    }
};