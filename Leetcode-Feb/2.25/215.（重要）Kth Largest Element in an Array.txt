1.Ê±¼ä£ºO£¨N£©£»¿Õ¼ä£ºO£¨LOGN£©
class Solution {
public:
	int findKthLargest(vector<int>& nums, int k) {
		if (nums.empty() || k > nums.size() || k < 1) return 0;
		k = nums.size() - k;
		int index = partition(nums, 0, nums.size() - 1);
		while (index != k){
			if (index < k) index = partition(nums, index + 1, nums.size() - 1);
			else index = partition(nums, 0, index - 1);
		}
		return nums[index];
	}
private:
	int partition(std::vector<int>& nums, int lower, int upper){
		if (lower >= upper) return lower;
		int num = nums[lower];
		while (lower < upper){
			while (lower < upper && nums[upper] >= num) --upper;
			nums[lower] = nums[upper];
			while (lower < upper && nums[lower] <= num) ++lower;
			nums[upper] = nums[lower];
		}
		nums[lower] = num;
		return lower;
	}
};