1.Ê±¼ä£ºO£¨N£©£»¿Õ¼ä£ºO£¨1£©£º
class Solution {
public:
	vector<int> singleNumber(vector<int>& nums) {
		const int size = nums.size();
		int temp = 0;
		for (int i = 0; i < size; ++i){
			temp ^= nums[i];
		}
		int diffBitOffset = 0;
		for (int i = 0; i < 32; ++i){
			if (((temp >> i) & 1) == 1){
				diffBitOffset = i;
				break;
			}
		}
		int numOne = 0, numTwo = 0;
		for (int i = 0; i < size; ++i){
			if (((nums[i] >> diffBitOffset) & 1) == 1){
				numOne ^= nums[i];
			}
			else{
				numTwo ^= nums[i];
			}
		}
		return std::vector<int>{numOne, numTwo};
	}
};