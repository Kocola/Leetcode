1.时间：O（1）；空间：O（1）
class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        bool used[9];
        
        for(int i = 0; i < 9; ++i){
            std::fill(used, used + 9, false);
            /* 检查行 */
            for(int j = 0; j < 9; ++j){
                if(check(board[i][j], used) == false){
                    return false;
                }
            }
            std::fill(used, used + 9, false);
            /* 检查列 */
            for(int j = 0; j < 9; ++j){
                if(check(board[j][i], used) == false){
                    return false;
                }
            }
        }
        
        /* 检查九宫格 */
        for(int r = 0; r < 9 / 3; ++r){
            for(int c = 0; c < 9 / 3; ++c){
                std::fill(used, used + 9, false);
                for(int i = 0; i < 3; ++i){
                    for(int j = 0; j < 3; ++j){
                        if(check(board[3*r+i][3*c+j], used) == false){
                            return false;
                        }
                    }
                }
            }
        }
        return true;
    }
private:
    bool check(char ch, bool used[9]){
        if(ch == '.') return true;
        if(used[ch - '1'] == true){	/* ch - '0'导致数组越界和结果错误 */
            return false;
        }
        used[ch - '1'] = true;
        return true;
    }
};