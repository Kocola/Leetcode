1.时间：O（N^2）;空间：O（1）
void rotate(std::vector<std::vector<int>>& matrix) {
	if (matrix.size() < 2 || matrix.size() != matrix[0].size()) return;
	const int n = matrix.size();
	/* 副对角线旋转 */
	for (int i = 0; i < n - 1; ++i){
		for (int j = 0; j < n - 1 - i; ++j){
			std::swap(matrix[i][j], matrix[n - 1 - j][n - 1 - i]);
		}
	}
	/* 沿着水平中线旋转一次 */
	for (int i = 0; i < n / 2; ++i){
		for (int j = 0; j < n; ++j){
			std::swap(matrix[i][j], matrix[n - 1 - i][j]);
		}
	}
}
2.时间：O（N^2）;空间O（1）
void rotate(std::vector<std::vector<int>>& matrix) {
	if (matrix.size() < 2 || matrix.size() != matrix[0].size()) return;
	const int n = matrix.size();
	/* 沿正对角线旋转 */
	for (int i = 0; i < n - 1; ++i){
		for (int j = i + 1; j < n; ++j){
			std::swap(matrix[i][j], matrix[j][i]);
		}
	}
	/* 沿着垂直中线旋转一次 */
	for (int i = 0; i < n; ++i){
		for (int j = 0; j < n / 2; ++j){
			std::swap(matrix[i][j], matrix[i][n - 1 - j]);
		}
	}
}