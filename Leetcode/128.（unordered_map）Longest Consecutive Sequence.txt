1.时间：O（n）；空间：O（N）
重点：哈希表加速，unordered_map
class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        unordered_map<int, bool> used;
        for(auto i : nums) used[i] = false;
        int longest = 0;
        for(auto i : nums){
            if(used[i]) continue;
            int length = 1;
            for(int j = i + 1; used.find(j) != used.end(); ++j){
                length++;
                used[j] = true;
            }
            for(int j = i - 1; used.find(j) != used.end(); --j){
                length++;
                used[j] = true;
            }
            longest = std::max(length, longest);
        }
        return longest;
    }
};