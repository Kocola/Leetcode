1.Ê±¼ä£ºO£¨N£©£»¿Õ¼ä£ºO£¨1£©
class Solution {
public:
    int rob(vector<int>& nums) {
		if (nums.empty()) return 0;
		if (nums.size() == 1) return nums.front();
		return std::max(robsub(nums, 0, nums.size() - 2), robsub(nums, 1, nums.size() - 1));
    }
private:
	int robsub(const std::vector<int>& nums, int start, int end){
		if (start > end) return 0;
		if (start == end) return nums[start];
		std::vector<int> vals(2, 0);
		vals[1] = nums[start];
		for (int i = start + 1; i <= end; ++i){
			int tmp = vals[0];
			vals[0] = std::max(vals[0], vals[1]);
			vals[1] = std::max(tmp + nums[i], vals[1]);
		}
		return std::max(vals[0], vals[1]);
	}
};