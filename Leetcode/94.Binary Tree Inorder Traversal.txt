1.时间：O（N）；空间：O（1）/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
	vector<int> inorderTraversal(TreeNode* root) {
		if (root == nullptr) return std::vector<int>();
		std::vector<int> result;
		std::stack<TreeNode*> stk;
		TreeNode* p = root;
		while (!stk.empty() || p != nullptr){
			if (p != nullptr){
				stk.push(p);
				p = p->left;
			} else{
				p = stk.top();
				stk.pop();
				result.push_back(p->val);
				p = p->right;
			}
		}
		return result;
	}
};
2.时间：O（N）;空间：O（1）	-> 线索化