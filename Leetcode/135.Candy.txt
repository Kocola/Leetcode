1.时间：O（N）；空间：O（N）
class Solution {
public:
	int candy(vector<int>& ratings) {
		if (ratings.size() == 0) return 0;
		const int size = ratings.size();
		std::vector<int> allocatedNum(size, 0);
		/* 从左到右扫描 */
		for (int i = 1, inc = 1; i < size; ++i){
			if (ratings[i] > ratings[i - 1]){
				allocatedNum[i] = std::max(inc++, allocatedNum[i]);
			}
			else{
				inc = 1;
			}
		}
		/* 从右到左扫描 */
		for (int i = size - 2, inc = 1; i >= 0; --i){
			if (ratings[i] > ratings[i + 1]){
				allocatedNum[i] = std::max(inc++, allocatedNum[i]);
			}
			else{
				inc = 1;
			}
		}
		/* 每个人至少有一个糖果 */
		return std::accumulate(allocatedNum.begin(), allocatedNum.end(), size);
	}
};