1.时间：O（N）；空间：O（1）
class Solution {
public:
	/* 本质上是桶排序，每当A[i] != i+1的时候，将A[i]和A[A[i]-1]交换，
	    直到无法交换为止，终止条件是：A[i] = A[A[i]-1]*/
	int firstMissingPositive(vector<int>& nums) {
		bucketSort(nums);
		for (int i = 0; i < nums.size(); ++i){
			if (nums[i] != i + 1) return i + 1;
		}
		return nums.size() + 1;
	}
private:
	void bucketSort(std::vector<int>& nums){
		const int size = nums.size();
		for (int i = 0; i < size; ++i){
			while (nums[i] != i + 1){
				if (nums[i] <= 0 || nums[i] > size || nums[i] == nums[nums[i] - 1])
					break;
				std::swap(nums[i], nums[nums[i] - 1]);
			}
		}
	}
};