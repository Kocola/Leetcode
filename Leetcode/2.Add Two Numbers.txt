1.时间：O（N）；空间：O（1） ->最后进位需要考虑（[5][5]情况）
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
	ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
		if (l1 == nullptr) return l2;
		if (l2 == nullptr) return l1;
		ListNode* l3 = new ListNode(-1);
		ListNode* p1 = l1;
		ListNode* p2 = l2;
		ListNode* p3 = l3;
		int carry = 0;
		while (p1 != nullptr && p2 != nullptr){
			int temp = p1->val + p2->val + carry;
			carry = temp / 10;
			p3->next = new ListNode(temp % 10);
			p1 = p1->next;
			p2 = p2->next;
			p3 = p3->next;
		}
		while (p1 != nullptr){
			int temp = p1->val + carry;
			carry = temp / 10;
			p3->next = new ListNode(temp % 10);
			p1 = p1->next;
			p3 = p3->next;
		}
		while (p2 != nullptr){
			int temp = p2->val + carry;
			carry = temp / 10;
			p3->next = new ListNode(temp % 10);
			p2 = p2->next;
			p3 = p3->next;
		}

		if (carry > 0){
			p3->next = new ListNode(carry);
			p3 = p3->next;
		}
		/* 去除l3的头节点 */
		p3 = l3;
		l3 = l3->next;
		delete p3;

		return l3;
	}
};