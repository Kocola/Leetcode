1.时间：O（LOGN）；空间：O（1）
class Solution {
public:
	vector<int> searchRange(vector<int>& nums, int target) {
		int lowerIndex = calcLowerIndex(nums, target);
		int upperIndex = calcUpperIndex(nums, target);
		if (lowerIndex == upperIndex) return std::vector<int>{-1, -1};	//说明未找到
		return std::vector<int>{lowerIndex, upperIndex - 1};
	}
private:
	int calcLowerIndex(const std::vector<int>& nums, int target){
		int lower = 0, upper = nums.size();//如果upper = nums.size() - 1，对于[1],1这样的数据将会出错
		while (lower < upper){
			int mid = lower + ((upper - lower) >> 1);
			if (nums[mid] < target){
				lower = mid + 1;
			} else{
				upper = mid;
			}
		}
		return lower;
	}
	int calcUpperIndex(const std::vector<int>& nums, int target){
		int lower = 0, upper = nums.size();
		while (lower < upper){
			int mid = lower + ((upper - lower) >> 1);
			if (nums[mid] <= target){	//和calcLowerIndex仅此处不同
				lower = mid + 1;
			} else{
				upper = mid;
			}
		}
		return upper;
	}
};