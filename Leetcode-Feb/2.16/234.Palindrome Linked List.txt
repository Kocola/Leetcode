1.Ê±¼ä£ºO£¨N£©£»¿Õ¼ä£ºO£¨1£©
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
	bool isPalindrome(ListNode* head) {
		if (head == nullptr || head->next == nullptr) return true;
		ListNode* slow = head, *fast = head;
		ListNode* prev = nullptr;
		while (fast != nullptr && fast->next != nullptr){
			prev = slow;
			slow = slow->next;
			fast = fast->next->next;
		}
		prev->next = nullptr;
		ListNode* head1 = head, *head2 = slow;
		head2 = reverseList(head2);
		ListNode* p1 = head1, *p2 = head2;
		while (p1 != nullptr && p2 != nullptr){
			if (p1->val != p2->val) return false;
			p1 = p1->next;
			p2 = p2->next;
		}
		return true;
	}
private:
	ListNode* reverseList(ListNode* head){
		if (head == nullptr || head->next == nullptr) return head;
		ListNode* prev = head, *cur = prev->next;
		prev->next = nullptr;
		while (cur != nullptr){
			ListNode* cur_next = cur->next;
			cur->next = prev;
			prev = cur;
			cur = cur_next;
		}
		head = prev;
		return head;
	}
};