1.时间：O（N）；空间：O（N）
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
	vector<int> preorderTraversal(TreeNode* root) {
		if (root == nullptr) return std::vector<int>();
		std::vector<int> result;
		std::stack<TreeNode*> stk;
		stk.push(root);
		while (!stk.empty()){
			auto node = stk.top();
			stk.pop();
			result.push_back(node->val);
			/* 因先访问左端，故先将右节点入栈 */
			if (node->right != nullptr) stk.push(node->right);
			if (node->left != nullptr) stk.push(node->left);
		}
		return result;
	}
};
2.时间：O（N）；空间：O（1）	->	线索化